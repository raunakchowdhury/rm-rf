DEVLOG: Team rm-rf

------------------------------------
Project Summary:
We will be simulating the final level of Plants vs Zombies 1. The conventional PvZ games allow you to expand your garden-army of plants with sun; however, in the Zomboss boss fight (the final boss), there is no sun. Our project is an emulation of the boss fight against Zomboss. The goal of the player is to strategically place his or her plants such that none of the zombies or their weapons come into contact with the house. However, there will be some changes made: the actual level will take place in the Garden setpiece (which is flat with grass), there will be no pots, and there will be no advanced phases (ie. the phase were the Zomboss AoE attacks some of your plants by throwing a van on top of them).
------------------------------------
Obstacles Overcome:
- The entire project (sat at Whole Foods trio-programming for 9 hours on Thursday)
- Interactions between projectiles, plants, and zombies (used "radius" to determine when each should interact with each other)
- Animations (used editing software to push)
- Bugs on top of bugs (used print statements and trio feedback to resolve bugs)
- Sleepiness/procrastination/finals week (actually got together on a day off)
------------------------------------
Unresolved Issues:
- Possibly incorrect interactions between zombies, plants, and projectiles (would require extensive testing, but time is the issue)
- Lag (could not figure out how to speed up the animation)
------------------------------------
Cool Stuff Learned:
- Learned a lot about Processing (have a large amount of familiarity of the language across the board)
- Photo Editing (Preview is godly at editing)
- How to get a group together at Whole Foods (not use Messenger)
- The power of trio programming (we were a lot more efficient programming together)
------------------------------------
Mid-development Design Changes
- Cut down the number of plants used (time constraints was an issue)
- Cut down the number of zombies to one (time constraints again, but we compromised by giving some zombies a random chance to have higher HP)
- Eliminate the shovel (increase the difficulty of the game >:) )
------------------------------------
Lessons Learned
- The worth of peer programming/feedback in person. We were able to pick out bugs far more quickly than if we did a conference call.
- Be open-minded about design changes. Some of our group members had outlandish ideas that were quickly dropped due to feedback from other members.
------------------------------------

Nomenclature:
> R - Assigned to Raunak
> F - Assigned to Fabiha
> N - Assigned to Nadine

Deadline Dates in Parentheses

------------------------------------
Changes to Codebase:

- Added devlog (5/25/18) -R
- Added template file for playing soundtracks (5/25/18) -R

- Completed plan with assigned tasks (5/30/18) -N

- Flowchart and UML (5/31/18) -N/F
- Added Character, Peashooter, Plant, Plot and Projectile classes (5/31/18) -N

- Added abstracted zombie class (6/03/18) -R
- Procured zombie and plant sprites (6/03/18) -F/R
- Edited devlog (6/03/18) -F
- Edited plan (6/03/08) -F

- Added LLNode, DLLNode, Queue, and LList (6/05/18) -F

- Finished instantiation of Plots (6/05/18) -F
- Added display method for Character and finished loading of sprites (6/05/18) -R

- Added PeaShooter displays and cross-compatibility between Plants, Projectiles, and Plots (6/06/18) -F,N,R

- Fixed Projectiles and added colour (6/07/18) -F,N,R
- Added comments and QoL Changes (6/07/18) -F,N,R
- Added backend for Zombies (6/07/18) -F,N,R
- Added all game features for MVP (Plants, Zomboss, relevant pics, etc.) (6/07/18) -R

------------------------------------
Tasks to Complete/Features to Implement:
0. fill Character file completely, but comment out sprites (N) [X]
		- protected PShape[] _sprites
		- protected int _HP
		- protected int _lane
		- protected int _x
		- protected int _y
		+ abstract void takeDamage()
		+ int lane()
		+ abstract int value()
1. start Plant file (R) [X]
		- protected Plot location
		+ abstract void attack()
2. Complete Projectile file (similar to Ball) (F) [X]
		- int _damage
		- int _dx
		- int _dy
		- int _x
		- int _y
(see Plan for more)
------------------------------------
Issues to deal with:
	(- for currently not dealt with)
	(+ for dealt with)

- LLNode, DLLNode, Queue, and LList have been added but haven't been tested [X]
- Woo.pde -> constructor(): zombieSpawnRate has been set to 0 [X]
- Woo.pde -> mouseClicked(): condition for placing a plant is true instead of [X]
                             clicked == true
------------------------------------
Cool Stuff that could be Added Later:
